// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sorveteria.Contexts;

#nullable disable

namespace Sorveteria.Migrations
{
    [DbContext(typeof(ApplicationContext.ApplicationDbContext))]
    [Migration("20241204230948_initialMigration")]
    partial class initialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sorveteria.DTO.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantidadeBolas")
                        .HasColumnType("int");

                    b.Property<int>("Sabor1Id")
                        .HasColumnType("int");

                    b.Property<int?>("Sabor2Id")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Sabor1Id");

                    b.HasIndex("Sabor2Id");

                    b.ToTable("Pedidos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            NomeCliente = "Eduardo",
                            QuantidadeBolas = 1,
                            Sabor1Id = 1,
                            Valor = 10.2m
                        });
                });

            modelBuilder.Entity("Sorveteria.DTO.Sabor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ValorBola")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Sabores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Mousse de Maracuja",
                            ValorBola = 10.2m
                        });
                });

            modelBuilder.Entity("Sorveteria.DTO.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "eduarbaldin@gmail.com",
                            Nome = "Admin Eduardo",
                            Senha = "123456"
                        });
                });

            modelBuilder.Entity("Sorveteria.DTO.Pedido", b =>
                {
                    b.HasOne("Sorveteria.DTO.Sabor", "Sabor1")
                        .WithMany()
                        .HasForeignKey("Sabor1Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sorveteria.DTO.Sabor", "Sabor2")
                        .WithMany()
                        .HasForeignKey("Sabor2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Sabor1");

                    b.Navigation("Sabor2");
                });
#pragma warning restore 612, 618
        }
    }
}
